buildscript {
    apply from: "util.gradle"
    apply from: "dependencies.gradle"

    addRepos(repositories)
    dependencies {
        classpath deps.plugins.kotlin
        classpath deps.plugins.android
        classpath deps.plugins.navSafeArgs
        classpath deps.plugins.hilt
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "$detektVersion"
    id "com.github.ben-manes.versions" version "$versionsVersion"
}

allprojects {
    addRepos(repositories)
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    if (name == "main") {
        apply plugin: "com.android.application"
    } else {
        apply plugin: "com.android.library"
    }
    apply plugin: "kotlin-android"
    apply plugin: "kotlin-kapt"
    apply plugin: "kotlin-parcelize"
    apply plugin: "androidx.navigation.safeargs.kotlin"
    apply plugin: "dagger.hilt.android.plugin"

    android {
        buildToolsVersion conf.buildTools
        compileSdkVersion conf.targetSdk

        defaultConfig {
            minSdkVersion conf.minSdk
            targetSdkVersion conf.targetSdk
            versionCode conf.versionCode
            versionName conf.versionName
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        signingConfigs {
            release {
                keyAlias System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")
                keyPassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
                storeFile file(System.getenv("HOME") + "/keystores/basket_keystore.jks")
                storePassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PASSWORD")
                enableV1Signing true
                enableV2Signing true
                enableV3Signing true
                enableV4Signing true
            }
        }

        buildTypes {
            debug {
                multiDexEnabled true
            }
            release {
                minifyEnabled true
                if (name == "main") {
                    shrinkResources true
                }
                proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
                signingConfig signingConfigs.release
            }
        }

        buildFeatures {
            viewBinding true
        }

        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs += [
                    "-XXLanguage:+InlineClasses",
                    "-progressive"
            ]
        }

        compileOptions {
            sourceCompatibility 1.8
            targetCompatibility 1.8
        }

        testOptions {
            unitTests {
                includeAndroidResources = true
            }

            animationsDisabled true
        }
    }

    dependencies {
        implementation fileTree(dir: "libs", include: ["*.jar"])

        implementation deps.kotlin.stdlib
        implementation deps.kotlin.coroutines
        implementation deps.kotlin.coroutinesAndroid

        implementation deps.androidx.navFragment
        implementation deps.androidx.datastorePref

        implementation deps.hilt.android
        implementation deps.hilt.viewmodel
        kapt deps.hilt.compiler
        kapt deps.hilt.androidXCompiler

        implementation deps.timber

        testImplementation deps.testing.junit
        testImplementation deps.testing.kotlinTest
        testImplementation deps.testing.mockito
        testImplementation deps.androidTesting.livedata

        androidTestImplementation deps.testing.kotlinTest
        androidTestImplementation deps.androidTesting.core
        androidTestImplementation deps.androidTesting.runner
        androidTestImplementation deps.androidTesting.junit
        androidTestImplementation deps.androidTesting.rules
        androidTestImplementation deps.androidTesting.livedata
        androidTestImplementation deps.androidTesting.room
        androidTestImplementation deps.androidTesting.hilt
        kaptAndroidTest deps.androidTesting.hiltCompiler
        androidTestImplementation deps.androidTesting.barista

        if (name != "core") {
            implementation project(path: ":core")
        }
    }

    kapt {
        correctErrorTypes true
    }
}

detekt {
    failFast = false
    config = files("$projectDir/config/detekt/detekt.yml")
    buildUponDefaultConfig = true
    reports {
        txt.enabled = true
        html.enabled = false
        xml.enabled = false
    }
}

tasks.withType(io.gitlab.arturbosch.detekt.Detekt) {
    jvmTarget = "1.8"
    source = files("$projectDir")
    exclude ".*test.*"
    exclude "**/build/**"
    exclude ".*/resources/.*"
    exclude ".*/tmp/.*"
}
